var merge = require('utils-merge')
    , cookie = require('cookie');
/**
 * Initialize a new `Cookie` with the given `options`.
 *
 * @param {IncomingMessage} req
 * @param {Object} options
 * @api private
 */

function Cookie(options) {
    this.path = '/';
    this.maxAge = null;
    this.httpOnly = true;
    if (options) merge(this, options);
    this.originalMaxAge = undefined == this.originalMaxAge
        ? this.maxAge
        : this.originalMaxAge;
};
Cookie.prototype = {

    //Set expires `date`.
    set expires(date) {
        this._expires = date;
        this.originalMaxAge = this.maxAge;
    },

    // Get expires `date`.
    get expires() {
        return this._expires;
    },

    //Set expires via max-age in `ms`.
    set maxAge(ms) {
        this.expires = 'number' == typeof ms
            ? new Date(Date.now() + ms)
            : ms;
    },

    // Get expires max-age in `ms`.
    get maxAge() {
        return this.expires instanceof Date
            ? this.expires.valueOf() - Date.now()
            : this.expires;
    },

    // Return cookie data object.
    get data() {
        return {
            originalMaxAge: this.originalMaxAge
            , expires: this._expires
            , secure: this.secure
            , httpOnly: this.httpOnly
            , domain: this.domain
            , path: this.path
        }
    },

    // Return a serialized cookie string.
    serialize: function (name, val) {
        return cookie.serialize(name, val, this.data);
    },
    toJSON: function () {
        return this.data;
    }
};
module.exports = Cookie;
